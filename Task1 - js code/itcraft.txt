function PaidService(id, name, costs) {
 this.id = id;
 this.name = name;
 this.costs = costs;
}

 PaidService.prototype.calculateAverageMonthlyCosts = function() {
  let averageHoursCosts = this.costs;
 };

FixedMonthlyCostPaidService.prototype = Object.create(PaidService.prototype);
FixedHourlyCostPaidService.prototype = Object.create(PaidService.prototype);

function FixedMonthlyCostPaidService() {
}

function FixedHourlyCostPaidService() {
}

FixedMonthlyCostPaidService.prototype.calculateAverageMonthlyCosts = function() {
  var result = PaidService.prototype.calculateAverageMonthlyCosts.apply(this);
  let averageHoursCosts = this.costs;

};

FixedHourlyCostPaidService.prototype.calculateAverageHoursCosts = function() {
 var result = PaidService.prototype.calculateAverageMonthlyCosts.apply(this);
 let averageMonthlyCosts = 30 * 24 * this.costs;
};

let i = 1;

let array = [];

let collection = {
   'Google Orkut' : 11,
   'Google Voice': 9.4,
   'YouTube': 8064,
   'Mandrill': 11.2,
   'Google Finance': 7.8,
   'Google Building Maker': 5347,
   'LinkedIn': 6863
};

/*
    FixedHourlyCostPaidService('service1', 'Google Orkut', 11)
    FixedHourlyCostPaidService('service2', 'Google Voice', 9.4)
    FixedMonthlyCostPaidService('service5', 'YouTube', 8064)
    FixedHourlyCostPaidService('service3', 'Mandrill', 11.2)
    FixedHourlyCostPaidService('service4', 'Google Finance', 7.8)
    FixedMonthlyCostPaidService('service7', 'Google Building Maker', 5347)
    FixedMonthlyCostPaidService('service6', 'LinkedIn', 6863)
*/


 for (var key in collection) {
    if ( collection[key] < 100) {
     array.push = new FixedHourlyCostPaidService('service' + i, key, collection[key]);
    } else {
     array.push = new FixedMonthlyCostPaidService('service' + i, key, collection[key]);
    }
    i++;
 }


//сортировка массива или по названию компании, если есть одинаковые значени€ стоимости сервиса, или по значению стоимости сервиса
var arrayForPrint = array.sort( function(prev, next) {
 if ( next.costs == prev.costs) {
  return prev.name.localeCompare(next.name);
 }
 return next.costs - prev.costs;
});

//все элементы по заданному образцу
for (let j = 0; j < arrayForPrint.length; j++ ) {
 console.log(arrayForPrint[j].id + " / " + arrayForPrint[j].name + " / " + arrayForPrint[j].costs);
}

//значени€ свойства name в первых 5 элементах
for (let j = 0; j < 6; j++ ) {
 console.log(arrayForPrint[j].name);
}

//значени€ свойства id в последних 3 элементах
for (let j = arrayForPrint.length - 3; j < arrayForPrint.length; j++ ) {
 console.log(arrayForPrint[j].id);
}

var service1 = 'youtube';
var service2 = 'mandrill';

for (let j = 0; j < arrayForPrint.length; j++) {
 if ( arrayForPrint[j].name.toLowerCase() == service1.toLowerCase()) {
  var obj1 = arrayForPrint[j];
 }
 if( arrayForPrint[j].name.toLowerCase() == service2.toLowerCase()) {
  var obj2 = arrayForPrint[j];
 }
}

if ( obj1.costs < obj2.costs ) {
 console.log(obj2.name);
 console.log(obj1.name);
} else if (obj1.costs > obj2.costs) {
 console.log(obj1.name);
 console.log(obj2.name);
} else {
 console.log(obj1.name + " / " + obj2.name);
}



